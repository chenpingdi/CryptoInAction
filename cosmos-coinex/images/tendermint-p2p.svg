<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1297px" preserveAspectRatio="none" style="width:1552px;height:1297px;" version="1.1" viewBox="0 0 1552 1297" width="1552px" zoomAndPan="magnify"><defs><filter height="300%" id="f7xsjlce0an8t" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[fa03aa15696d8de1fc436cb9f6abb39b]
cluster p2p--><polygon fill="#FFFFFF" filter="url(#f7xsjlce0an8t)" points="22,24,55,24,62,46.4883,1322,46.4883,1322,1285,22,1285,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="62" y1="46.4883" y2="46.4883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="27" x="26" y="39.5352">p2p</text><!--MD5=[7579d5565d2521d5936cec86ed3dadee]
cluster service--><polygon fill="#FFFFFF" filter="url(#f7xsjlce0an8t)" points="1346,49.5,1402,49.5,1409,71.9883,1530,71.9883,1530,865.5,1346,865.5,1346,49.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1346" x2="1409" y1="71.9883" y2="71.9883"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="50" x="1350" y="65.0352">service</text><!--MD5=[311699931f27d41b8a110d6bfb3b1517]
class p2p.BaseReactor--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="138.6855" id="p2p.BaseReactor" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="457.5" y="1130"/><ellipse cx="553.25" cy="1146" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M552.4834,1147.063 Q550.6323,1146.3574 549.9766,1145.5813 Q549.3208,1144.8052 549.3208,1143.4937 Q549.3208,1141.8086 550.3999,1140.8457 Q551.479,1139.8828 553.3633,1139.8828 Q554.2183,1139.8828 555.0732,1140.0779 Q555.9282,1140.2729 556.7666,1140.6548 L556.7666,1143.0454 Q555.978,1142.4893 555.1646,1142.1987 Q554.3511,1141.9082 553.5542,1141.9082 Q552.666,1141.9082 552.1929,1142.2651 Q551.7197,1142.6221 551.7197,1143.2861 Q551.7197,1143.8008 552.0642,1144.137 Q552.4087,1144.4731 553.5044,1144.8799 L554.5586,1145.2783 Q556.0527,1145.8262 556.7583,1146.731 Q557.4639,1147.6357 557.4639,1149.0137 Q557.4639,1150.8896 556.3557,1151.8152 Q555.2476,1152.7407 553.0063,1152.7407 Q552.085,1152.7407 551.1594,1152.5208 Q550.2339,1152.3008 549.3706,1151.8691 L549.3706,1149.3374 Q550.3501,1150.0347 551.2673,1150.375 Q552.1846,1150.7153 553.0811,1150.7153 Q553.9858,1150.7153 554.4839,1150.3044 Q554.9819,1149.8936 554.9819,1149.1548 Q554.9819,1148.5986 554.6499,1148.1794 Q554.3179,1147.7603 553.687,1147.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="573.75" y="1150.5352">BaseReactor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="458.5" x2="727.5" y1="1162" y2="1162"/><ellipse cx="468.5" cy="1173" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="477.5" y="1176.6348">Switch *Switch</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="458.5" x2="727.5" y1="1182.9551" y2="1182.9551"/><ellipse cx="468.5" cy="1193.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="477.5" y="1197.5898">SetSwitch(sw *Switch)</text><ellipse cx="468.5" cy="1206.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="477.5" y="1210.5449">GetChannels() []*conn.ChannelDescriptor</text><ellipse cx="468.5" cy="1219.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="477.5" y="1223.5">AddPeer(peer Peer)</text><ellipse cx="468.5" cy="1232.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="477.5" y="1236.4551">RemovePeer(peer Peer, reason</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="642.5" y="1236.4551">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="689.5" y="1236.4551">{})</text><ellipse cx="468.5" cy="1245.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="477.5" y="1249.4102">Receive(chID byte, peer Peer, msgBytes []byte)</text><ellipse cx="468.5" cy="1258.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="477.5" y="1262.3652">InitPeer(peer Peer) Peer</text><!--MD5=[9fb5b8a8bddc32b7b1ff318042f2b338]
class p2p.IPeerSet--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="112.7754" id="p2p.IPeerSet" style="stroke: #A80036; stroke-width: 1.5;" width="132" x="749" y="117"/><ellipse cx="788.3" cy="133" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M784.7277,129.2651 L784.7277,127.1069 L792.1071,127.1069 L792.1071,129.2651 L789.6418,129.2651 L789.6418,137.3418 L792.1071,137.3418 L792.1071,139.5 L784.7277,139.5 L784.7277,137.3418 L787.1931,137.3418 L787.1931,129.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="46" x="807.7" y="137.5352">IPeerSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="750" x2="880" y1="149" y2="149"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="750" x2="880" y1="157" y2="157"/><ellipse cx="760" cy="168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="769" y="171.6348">Has(key ID) bool</text><ellipse cx="760" cy="180.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="769" y="184.5898">HasIP(ip net.IP) bool</text><ellipse cx="760" cy="193.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="769" y="197.5449">Get(key ID) Peer</text><ellipse cx="760" cy="206.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="769" y="210.5">List() []Peer</text><ellipse cx="760" cy="219.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="769" y="223.4551">Size() int</text><!--MD5=[53e5f75d9eb4a4b76da8301e97156229]
class p2p.MultiplexTransport--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="384.832" id="p2p.MultiplexTransport" style="stroke: #A80036; stroke-width: 1.5;" width="299" x="38.5" y="516.5"/><ellipse cx="129.25" cy="532.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M128.4834,533.563 Q126.6323,532.8574 125.9766,532.0813 Q125.3208,531.3052 125.3208,529.9937 Q125.3208,528.3086 126.3999,527.3457 Q127.479,526.3828 129.3633,526.3828 Q130.2183,526.3828 131.0732,526.5779 Q131.9282,526.7729 132.7666,527.1548 L132.7666,529.5454 Q131.978,528.9893 131.1646,528.6987 Q130.3511,528.4082 129.5542,528.4082 Q128.666,528.4082 128.1929,528.7651 Q127.7197,529.1221 127.7197,529.7861 Q127.7197,530.3008 128.0642,530.637 Q128.4087,530.9731 129.5044,531.3799 L130.5586,531.7783 Q132.0527,532.3262 132.7583,533.231 Q133.4639,534.1357 133.4639,535.5137 Q133.4639,537.3896 132.3557,538.3152 Q131.2476,539.2407 129.0063,539.2407 Q128.085,539.2407 127.1594,539.0208 Q126.2339,538.8008 125.3706,538.3691 L125.3706,535.8374 Q126.3501,536.5347 127.2673,536.875 Q128.1846,537.2153 129.0811,537.2153 Q129.9858,537.2153 130.4839,536.8044 Q130.9819,536.3936 130.9819,535.6548 Q130.9819,535.0986 130.6499,534.6794 Q130.3179,534.2603 129.687,534.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="109" x="149.75" y="537.0352">MultiplexTransport</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="336.5" y1="548.5" y2="548.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="556.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="58.5" y="563.1348">netAddr NetAddress</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="569.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="58.5" y="576.0898">listener net.Listener</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="582.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="58.5" y="589.0449">maxIncomingConnections int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="595.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="41" x="58.5" y="602">acceptc</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="102.5" y="602">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="131.5" y="602">accept</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="608.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34" x="58.5" y="614.9551">closec</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="95.5" y="614.9551">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="124.5" y="614.9551"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="124.5" y="614.9551">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="156.5" y="614.9551">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="621.2754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="58.5" y="627.9102">conns ConnSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="634.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="58.5" y="640.8652">connFilters []ConnFilterFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="647.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58.5" y="653.8203">dialTimeout time.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="660.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="58.5" y="666.7754">filterTimeout time.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="673.0957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="58.5" y="679.7305">handshakeTimeout time.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="686.0508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="58.5" y="692.6855">nodeInfo NodeInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="699.0059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="58.5" y="705.6406">nodeKey NodeKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="711.9609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="58.5" y="718.5957">resolver IPResolver</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="724.916"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="58.5" y="731.5508">mConfig conn.MConnConfig</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="336.5" y1="737.8711" y2="737.8711"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="745.8711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="58.5" y="752.5059">acceptPeers()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="758.8262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="58.5" y="765.4609">cleanup(c net.Conn) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="771.7813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="58.5" y="778.416">filterConn(c net.Conn) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="784.7363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="58.5" y="791.3711">upgrade(c net.Conn, dialedAddr *NetAddress) (....)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="797.6914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="58.5" y="804.3262">wrapPeer(c net.Conn, ni NodeInfo, ....) Peer</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="61.5" y="817.2813"/><ellipse cx="49.5" cy="826.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="58.5" y="830.2363">NetAddress() NetAddress</text><ellipse cx="49.5" cy="839.5566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="58.5" y="843.1914">Accept(cfg peerConfig) (Peer, error)</text><ellipse cx="49.5" cy="852.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="58.5" y="856.1465">Dial(addr NetAddress, cfg peerConfig) (Peer, error)</text><ellipse cx="49.5" cy="865.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="58.5" y="869.1016">Close() error</text><ellipse cx="49.5" cy="878.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="58.5" y="882.0566">Listen(addr NetAddress) error</text><ellipse cx="49.5" cy="891.377" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="58.5" y="895.0117">Cleanup(p Peer)</text><!--MD5=[e3e52a252a583c20fdaae9f735fd57de]
class p2p.Peer--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="229.3711" id="p2p.Peer" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="1110.5" y="59"/><ellipse cx="1190.75" cy="75" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1187.1777,71.2651 L1187.1777,69.1069 L1194.5571,69.1069 L1194.5571,71.2651 L1192.0918,71.2651 L1192.0918,79.3418 L1194.5571,79.3418 L1194.5571,81.5 L1187.1777,81.5 L1187.1777,79.3418 L1189.6431,79.3418 L1189.6431,71.2651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="26" x="1211.25" y="79.5352">Peer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1111.5" x2="1304.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1111.5" x2="1304.5" y1="99" y2="99"/><ellipse cx="1121.5" cy="110" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1130.5" y="113.6348">FlushStop()</text><ellipse cx="1121.5" cy="122.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1130.5" y="126.5898">ID() ID</text><ellipse cx="1121.5" cy="135.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1130.5" y="139.5449">RemoteIP() net.IP</text><ellipse cx="1121.5" cy="148.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1130.5" y="152.5">RemoteAddr() net.Addr</text><ellipse cx="1121.5" cy="161.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1130.5" y="165.4551">IsOutbound() bool</text><ellipse cx="1121.5" cy="174.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1130.5" y="178.4102">IsPersistent() bool</text><ellipse cx="1121.5" cy="187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1130.5" y="191.3652">CloseConn() error</text><ellipse cx="1121.5" cy="200.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1130.5" y="204.3203">NodeInfo() NodeInfo</text><ellipse cx="1121.5" cy="213.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1130.5" y="217.2754">Status() conn.ConnectionStatus</text><ellipse cx="1121.5" cy="226.5957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1130.5" y="230.2305">SocketAddr() *NetAddress</text><ellipse cx="1121.5" cy="239.5508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1130.5" y="243.1855">Send( byte,  []byte) bool</text><ellipse cx="1121.5" cy="252.5059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1130.5" y="256.1406">TrySend( byte,  []byte) bool</text><ellipse cx="1121.5" cy="265.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="1130.5" y="269.0957">Set( string,</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1194.5" y="269.0957">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="1241.5" y="269.0957">{})</text><ellipse cx="1121.5" cy="278.416" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1130.5" y="282.0508">Get( string)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1194.5" y="282.0508">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1241.5" y="282.0508">{}</text><!--MD5=[573edd832eea7a8264afd9f9040bf970]
class p2p.PeerSet--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="203.4609" id="p2p.PeerSet" style="stroke: #A80036; stroke-width: 1.5;" width="176" x="849" y="607.5"/><ellipse cx="911.25" cy="623.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M910.4834,624.563 Q908.6323,623.8574 907.9766,623.0813 Q907.3208,622.3052 907.3208,620.9937 Q907.3208,619.3086 908.3999,618.3457 Q909.479,617.3828 911.3633,617.3828 Q912.2183,617.3828 913.0732,617.5779 Q913.9282,617.7729 914.7666,618.1548 L914.7666,620.5454 Q913.978,619.9893 913.1646,619.6987 Q912.3511,619.4082 911.5542,619.4082 Q910.666,619.4082 910.1929,619.7651 Q909.7197,620.1221 909.7197,620.7861 Q909.7197,621.3008 910.0642,621.637 Q910.4087,621.9731 911.5044,622.3799 L912.5586,622.7783 Q914.0527,623.3262 914.7583,624.231 Q915.4639,625.1357 915.4639,626.5137 Q915.4639,628.3896 914.3557,629.3152 Q913.2476,630.2407 911.0063,630.2407 Q910.085,630.2407 909.1594,630.0208 Q908.2339,629.8008 907.3706,629.3691 L907.3706,626.8374 Q908.3501,627.5347 909.2673,627.875 Q910.1846,628.2153 911.0811,628.2153 Q911.9858,628.2153 912.4839,627.8044 Q912.9819,627.3936 912.9819,626.6548 Q912.9819,626.0986 912.6499,625.6794 Q912.3179,625.2603 911.687,625.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="931.75" y="628.0352">PeerSet</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="850" x2="1024" y1="639.5" y2="639.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="857" y="647.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="869" y="654.1348">mtx sync.Mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="857" y="660.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="869" y="667.0898">lookup</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="909" y="667.0898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="932" y="667.0898">[ID]*peerSetItem</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="857" y="673.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="869" y="680.0449">list []Peer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="850" x2="1024" y1="686.3652" y2="686.3652"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="857" y="694.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="869" y="701">hasIP(peerIP net.IP) bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="872" y="713.9551"/><ellipse cx="860" cy="723.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="869" y="726.9102">Add(peer Peer) error</text><ellipse cx="860" cy="736.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="869" y="739.8652">Has(peerKey ID) bool</text><ellipse cx="860" cy="749.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="869" y="752.8203">HasIP(peerIP net.IP) bool</text><ellipse cx="860" cy="762.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="869" y="765.7754">Get(peerKey ID) Peer</text><ellipse cx="860" cy="775.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="869" y="778.7305">Remove(peer Peer) bool</text><ellipse cx="860" cy="788.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="869" y="791.6855">Size() int</text><ellipse cx="860" cy="801.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="869" y="804.6406">List() []Peer</text><!--MD5=[37628d08395bda41cda4b3616adc29df]
class p2p.Reactor--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="125.7305" id="p2p.Reactor" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="763.5" y="1136.5"/><ellipse cx="872.75" cy="1152.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M869.1777,1148.7651 L869.1777,1146.6069 L876.5571,1146.6069 L876.5571,1148.7651 L874.0918,1148.7651 L874.0918,1156.8418 L876.5571,1156.8418 L876.5571,1159 L869.1777,1159 L869.1777,1156.8418 L871.6431,1156.8418 L871.6431,1148.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="44" x="893.25" y="1157.0352">Reactor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="764.5" x2="1033.5" y1="1168.5" y2="1168.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="764.5" x2="1033.5" y1="1176.5" y2="1176.5"/><ellipse cx="774.5" cy="1187.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="783.5" y="1191.1348">SetSwitch( *Switch)</text><ellipse cx="774.5" cy="1200.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="783.5" y="1204.0898">GetChannels() []*conn.ChannelDescriptor</text><ellipse cx="774.5" cy="1213.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="783.5" y="1217.0449">InitPeer(peer Peer) Peer</text><ellipse cx="774.5" cy="1226.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="783.5" y="1230">AddPeer(peer Peer)</text><ellipse cx="774.5" cy="1239.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="783.5" y="1242.9551">RemovePeer(peer Peer, reason</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="948.5" y="1242.9551">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="995.5" y="1242.9551">{})</text><ellipse cx="774.5" cy="1252.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="783.5" y="1255.9102">Receive(chID byte, peer Peer, msgBytes []byte)</text><!--MD5=[b34240524190d792e7d8883f18bd4dc7]
class p2p.Switch--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="721.6641" id="p2p.Switch" style="stroke: #A80036; stroke-width: 1.5;" width="441" x="372.5" y="348"/><ellipse cx="571.25" cy="364" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M570.4834,365.063 Q568.6323,364.3574 567.9766,363.5813 Q567.3208,362.8052 567.3208,361.4937 Q567.3208,359.8086 568.3999,358.8457 Q569.479,357.8828 571.3633,357.8828 Q572.2183,357.8828 573.0732,358.0779 Q573.9282,358.2729 574.7666,358.6548 L574.7666,361.0454 Q573.978,360.4893 573.1646,360.1987 Q572.3511,359.9082 571.5542,359.9082 Q570.666,359.9082 570.1929,360.2651 Q569.7197,360.6221 569.7197,361.2861 Q569.7197,361.8008 570.0642,362.137 Q570.4087,362.4731 571.5044,362.8799 L572.5586,363.2783 Q574.0527,363.8262 574.7583,364.731 Q575.4639,365.6357 575.4639,367.0137 Q575.4639,368.8896 574.3557,369.8152 Q573.2476,370.7407 571.0063,370.7407 Q570.085,370.7407 569.1594,370.5208 Q568.2339,370.3008 567.3706,369.8691 L567.3706,367.3374 Q568.3501,368.0347 569.2673,368.375 Q570.1846,368.7153 571.0811,368.7153 Q571.9858,368.7153 572.4839,368.3044 Q572.9819,367.8936 572.9819,367.1548 Q572.9819,366.5986 572.6499,366.1794 Q572.3179,365.7603 571.687,365.5195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="591.75" y="368.5352">Switch</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="373.5" x2="812.5" y1="380" y2="380"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="388"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="392.5" y="394.6348">config *config.P2PConfig</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="400.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="392.5" y="407.5898">reactors</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="440.5" y="407.5898">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="463.5" y="407.5898">[string]Reactor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="413.9102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="392.5" y="420.5449">chDescs []*conn.ChannelDescriptor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="426.8652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="392.5" y="433.5">reactorsByCh</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="467.5" y="433.5">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="490.5" y="433.5">[byte]Reactor</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="439.8203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="392.5" y="446.4551">peers *PeerSet</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="452.7754"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="392.5" y="459.4102">dialing *cmap.CMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="465.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="392.5" y="472.3652">reconnecting *cmap.CMap</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="478.6855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="392.5" y="485.3203">nodeInfo NodeInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="491.6406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="392.5" y="498.2754">nodeKey *NodeKey</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="504.5957"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="392.5" y="511.2305">addrBook AddrBook</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="517.5508"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="392.5" y="524.1855">persistentPeersAddrs []*NetAddress</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="530.5059"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="392.5" y="537.1406">unconditionalPeerIDs</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="509.5" y="537.1406">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="19" x="532.5" y="537.1406">[ID]</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="551.5" y="537.1406">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="583.5" y="537.1406">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="543.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="392.5" y="550.0957">transport Transport</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="556.416"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="392.5" y="563.0508">filterTimeout time.Duration</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="569.3711"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="392.5" y="576.0059">peerFilters []PeerFilterFunc</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="582.3262"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="392.5" y="588.9609">rng *rand.Rand</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="595.2813"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="392.5" y="601.916">metrics *Metrics</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="373.5" x2="812.5" y1="608.2363" y2="608.2363"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="616.2363"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="392.5" y="622.8711">stopAndRemovePeer(peer Peer, reason</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="603.5" y="622.8711">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="650.5" y="622.8711">{})</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="629.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="392.5" y="635.8262">reconnectToPeer(addr *NetAddress)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="642.1465"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="392.5" y="648.7813">dialPeersAsync(netAddrs []*NetAddress)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="655.1016"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="392.5" y="661.7363">randomSleep(interval time.Duration)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="668.0566"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="392.5" y="674.6914">acceptRoutine()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="681.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="392.5" y="687.6465">addOutboundPeerWithConfig(addr *NetAddress, cfg *config.P2PConfig) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="693.9668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="392.5" y="700.6016">filterPeer(p Peer) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="706.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="392.5" y="713.5566">addPeer(p Peer) error</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="380.5" y="719.877"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="392.5" y="726.5117">addPeerWithConnection(conn net.Conn) error</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="395.5" y="739.4668"/><ellipse cx="383.5" cy="748.7871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="392.5" y="752.4219">NetAddress() *NetAddress</text><ellipse cx="383.5" cy="761.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268" x="392.5" y="765.377">AddReactor(name string, reactor Reactor) Reactor</text><ellipse cx="383.5" cy="774.6973" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="392.5" y="778.332">RemoveReactor(name string, reactor Reactor)</text><ellipse cx="383.5" cy="787.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="392.5" y="791.2871">Reactors()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="450.5" y="791.2871">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="473.5" y="791.2871">[string]Reactor</text><ellipse cx="383.5" cy="800.6074" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="392.5" y="804.2422">Reactor(name string) Reactor</text><ellipse cx="383.5" cy="813.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="392.5" y="817.1973">SetNodeInfo(nodeInfo NodeInfo)</text><ellipse cx="383.5" cy="826.5176" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="392.5" y="830.1523">NodeInfo() NodeInfo</text><ellipse cx="383.5" cy="839.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="392.5" y="843.1074">SetNodeKey(nodeKey *NodeKey)</text><ellipse cx="383.5" cy="852.4277" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="392.5" y="856.0625">OnStart() error</text><ellipse cx="383.5" cy="865.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="392.5" y="869.0176">OnStop()</text><ellipse cx="383.5" cy="878.3379" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="392.5" y="881.9727">Broadcast(chID byte, msgBytes []byte)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="597.5" y="881.9727">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="626.5" y="881.9727">bool</text><ellipse cx="383.5" cy="891.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="392.5" y="894.9277">NumPeers() int</text><ellipse cx="383.5" cy="904.248" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="392.5" y="907.8828">IsPeerUnconditional(id ID) bool</text><ellipse cx="383.5" cy="917.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="392.5" y="920.8379">MaxNumOutboundPeers() int</text><ellipse cx="383.5" cy="930.1582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="392.5" y="933.793">Peers() IPeerSet</text><ellipse cx="383.5" cy="943.1133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="392.5" y="946.748">StopPeerForError(peer Peer, reason</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="585.5" y="946.748">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="632.5" y="946.748">{})</text><ellipse cx="383.5" cy="956.0684" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="392.5" y="959.7031">StopPeerGracefully(peer Peer)</text><ellipse cx="383.5" cy="969.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="392.5" y="972.6582">SetAddrBook(addrBook AddrBook)</text><ellipse cx="383.5" cy="981.9785" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="392.5" y="985.6133">MarkPeerAsGood(peer Peer)</text><ellipse cx="383.5" cy="994.9336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="392.5" y="998.5684">DialPeersAsync(peers []string) error</text><ellipse cx="383.5" cy="1007.8887" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="392.5" y="1011.5234">DialPeerWithAddress(addr *NetAddress) error</text><ellipse cx="383.5" cy="1020.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="392.5" y="1024.4785">IsDialingOrExistingAddress(addr *NetAddress) bool</text><ellipse cx="383.5" cy="1033.7988" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="392.5" y="1037.4336">AddPersistentPeers(addrs []string) error</text><ellipse cx="383.5" cy="1046.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="392.5" y="1050.3887">AddUnconditionalPeerIDs(ids []string) error</text><ellipse cx="383.5" cy="1059.709" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="392.5" y="1063.3438">IsPeerPersistent(na *NetAddress) bool</text><!--MD5=[18cff6f764bb194711d9f5dd93f9c958]
class p2p.Transport--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="99.8203" id="p2p.Transport" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="270.5" y="123.5"/><ellipse cx="366.25" cy="139.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M362.6777,135.7651 L362.6777,133.6069 L370.0571,133.6069 L370.0571,135.7651 L367.5918,135.7651 L367.5918,143.8418 L370.0571,143.8418 L370.0571,146 L362.6777,146 L362.6777,143.8418 L365.1431,143.8418 L365.1431,135.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="386.75" y="144.0352">Transport</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="271.5" x2="526.5" y1="155.5" y2="155.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="271.5" x2="526.5" y1="163.5" y2="163.5"/><ellipse cx="281.5" cy="174.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="290.5" y="178.1348">NetAddress() NetAddress</text><ellipse cx="281.5" cy="187.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="290.5" y="191.0898">Accept( peerConfig) (Peer, error)</text><ellipse cx="281.5" cy="200.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="290.5" y="204.0449">Dial( NetAddress,  peerConfig) (Peer, error)</text><ellipse cx="281.5" cy="213.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="290.5" y="217">Cleanup( Peer)</text><!--MD5=[6fef2d861d215382f2c7392a760d324d]
class p2p.peer--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="410.7422" id="p2p.peer" style="stroke: #A80036; stroke-width: 1.5;" width="246" x="1060" y="503.5"/><ellipse cx="1165.25" cy="519.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1164.4834,520.563 Q1162.6323,519.8574 1161.9766,519.0813 Q1161.3208,518.3052 1161.3208,516.9937 Q1161.3208,515.3086 1162.3999,514.3457 Q1163.479,513.3828 1165.3633,513.3828 Q1166.2183,513.3828 1167.0732,513.5779 Q1167.9282,513.7729 1168.7666,514.1548 L1168.7666,516.5454 Q1167.978,515.9893 1167.1646,515.6987 Q1166.3511,515.4082 1165.5542,515.4082 Q1164.666,515.4082 1164.1929,515.7651 Q1163.7197,516.1221 1163.7197,516.7861 Q1163.7197,517.3008 1164.0642,517.637 Q1164.4087,517.9731 1165.5044,518.3799 L1166.5586,518.7783 Q1168.0527,519.3262 1168.7583,520.231 Q1169.4639,521.1357 1169.4639,522.5137 Q1169.4639,524.3896 1168.3557,525.3152 Q1167.2476,526.2407 1165.0063,526.2407 Q1164.085,526.2407 1163.1594,526.0208 Q1162.2339,525.8008 1161.3706,525.3691 L1161.3706,522.8374 Q1162.3501,523.5347 1163.2673,523.875 Q1164.1846,524.2153 1165.0811,524.2153 Q1165.9858,524.2153 1166.4839,523.8044 Q1166.9819,523.3936 1166.9819,522.6548 Q1166.9819,522.0986 1166.6499,521.6794 Q1166.3179,521.2603 1165.687,521.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="27" x="1185.75" y="524.0352">peer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1061" x2="1305" y1="535.5" y2="535.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="543.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1080" y="550.1348">mconn *conn.MConnection</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="556.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1080" y="563.0898">nodeInfo NodeInfo</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="569.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1080" y="576.0449">channels []byte</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="582.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="1080" y="589">metrics *Metrics</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="595.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1080" y="601.9551">metricsTicker *time.Ticker</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1083" y="614.9102"/><ellipse cx="1071" cy="624.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="1080" y="627.8652">Data *cmap.CMap</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1061" x2="1305" y1="634.1855" y2="634.1855"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="642.1855"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1080" y="648.8203">hasChannel(chID byte) bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1068" y="655.1406"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="1080" y="661.7754">metricsReporter()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1083" y="674.7305"/><ellipse cx="1071" cy="684.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1080" y="687.6855">String() string</text><ellipse cx="1071" cy="697.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1080" y="700.6406">SetLogger(l log.Logger)</text><ellipse cx="1071" cy="709.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1080" y="713.5957">OnStart() error</text><ellipse cx="1071" cy="722.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1080" y="726.5508">FlushStop()</text><ellipse cx="1071" cy="735.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="1080" y="739.5059">OnStop()</text><ellipse cx="1071" cy="748.8262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="1080" y="752.4609">ID() ID</text><ellipse cx="1071" cy="761.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1080" y="765.416">IsOutbound() bool</text><ellipse cx="1071" cy="774.7363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1080" y="778.3711">IsPersistent() bool</text><ellipse cx="1071" cy="787.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1080" y="791.3262">NodeInfo() NodeInfo</text><ellipse cx="1071" cy="800.6465" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1080" y="804.2813">SocketAddr() *NetAddress</text><ellipse cx="1071" cy="813.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1080" y="817.2363">Status() conn.ConnectionStatus</text><ellipse cx="1071" cy="826.5566" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1080" y="830.1914">Send(chID byte, msgBytes []byte) bool</text><ellipse cx="1071" cy="839.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="1080" y="843.1465">TrySend(chID byte, msgBytes []byte) bool</text><ellipse cx="1071" cy="852.4668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1080" y="856.1016">Get(key string)</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1162" y="856.1016">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1209" y="856.1016">{}</text><ellipse cx="1071" cy="865.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1080" y="869.0566">Set(key string, data</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="1185" y="869.0566">interface</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="12" x="1232" y="869.0566">{})</text><ellipse cx="1071" cy="878.377" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1080" y="882.0117">CloseConn() error</text><ellipse cx="1071" cy="891.332" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1080" y="894.9668">RemoteAddr() net.Addr</text><ellipse cx="1071" cy="904.2871" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="1080" y="907.9219">CanSend(chID byte) bool</text><!--MD5=[f2ba958c56ea10e04681f7ec6c9a06ea]
class p2p.peerConn--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="151.6406" id="p2p.peerConn" style="stroke: #A80036; stroke-width: 1.5;" width="159" x="916.5" y="97.5"/><ellipse cx="963.75" cy="113.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M962.9834,114.563 Q961.1323,113.8574 960.4766,113.0813 Q959.8208,112.3052 959.8208,110.9937 Q959.8208,109.3086 960.8999,108.3457 Q961.979,107.3828 963.8633,107.3828 Q964.7183,107.3828 965.5732,107.5779 Q966.4282,107.7729 967.2666,108.1548 L967.2666,110.5454 Q966.478,109.9893 965.6646,109.6987 Q964.8511,109.4082 964.0542,109.4082 Q963.166,109.4082 962.6929,109.7651 Q962.2197,110.1221 962.2197,110.7861 Q962.2197,111.3008 962.5642,111.637 Q962.9087,111.9731 964.0044,112.3799 L965.0586,112.7783 Q966.5527,113.3262 967.2583,114.231 Q967.9639,115.1357 967.9639,116.5137 Q967.9639,118.3896 966.8557,119.3152 Q965.7476,120.2407 963.5063,120.2407 Q962.585,120.2407 961.6594,120.0208 Q960.7339,119.8008 959.8706,119.3691 L959.8706,116.8374 Q960.8501,117.5347 961.7673,117.875 Q962.6846,118.2153 963.5811,118.2153 Q964.4858,118.2153 964.9839,117.8044 Q965.4819,117.3936 965.4819,116.6548 Q965.4819,116.0986 965.1499,115.6794 Q964.8179,115.2603 964.187,115.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="984.25" y="118.0352">peerConn</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="917.5" x2="1074.5" y1="129.5" y2="129.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="924.5" y="137.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="936.5" y="144.1348">outbound bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="924.5" y="150.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="936.5" y="157.0898">persistent bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="924.5" y="163.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="936.5" y="170.0449">conn net.Conn</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="924.5" y="176.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="936.5" y="183">socketAddr *NetAddress</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="924.5" y="189.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="936.5" y="195.9551">ip net.IP</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="917.5" x2="1074.5" y1="202.2754" y2="202.2754"/><ellipse cx="927.5" cy="213.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="33" x="936.5" y="216.9102">ID() ID</text><ellipse cx="927.5" cy="226.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="936.5" y="229.8652">RemoteIP() net.IP</text><ellipse cx="927.5" cy="239.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="936.5" y="242.8203">CloseConn()</text><!--MD5=[c22516aed28ee4c58d2db0be50dce8ef]
class p2p.transportLifecycle--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="73.9102" id="p2p.transportLifecycle" style="stroke: #A80036; stroke-width: 1.5;" width="163" x="72.5" y="136.5"/><ellipse cx="101" cy="152.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M97.4277,148.7651 L97.4277,146.6069 L104.8071,146.6069 L104.8071,148.7651 L102.3418,148.7651 L102.3418,156.8418 L104.8071,156.8418 L104.8071,159 L97.4277,159 L97.4277,156.8418 L99.8931,156.8418 L99.8931,148.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="118" y="157.0352">transportLifecycle</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="73.5" x2="234.5" y1="168.5" y2="168.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="73.5" x2="234.5" y1="176.5" y2="176.5"/><ellipse cx="83.5" cy="187.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="92.5" y="191.1348">Close() error</text><ellipse cx="83.5" cy="200.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="92.5" y="204.0898">Listen( NetAddress) error</text><!--MD5=[f90addf20bd1e85cf17f517894494b4c]
class service.BaseService--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="281.1914" id="service.BaseService" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="1362" y="568.5"/><ellipse cx="1400.85" cy="584.5" fill="#7FFFD4" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1400.0834,585.563 Q1398.2323,584.8574 1397.5766,584.0813 Q1396.9208,583.3052 1396.9208,581.9937 Q1396.9208,580.3086 1397.9999,579.3457 Q1399.079,578.3828 1400.9633,578.3828 Q1401.8183,578.3828 1402.6732,578.5779 Q1403.5282,578.7729 1404.3666,579.1548 L1404.3666,581.5454 Q1403.578,580.9893 1402.7646,580.6987 Q1401.9511,580.4082 1401.1542,580.4082 Q1400.266,580.4082 1399.7929,580.7651 Q1399.3197,581.1221 1399.3197,581.7861 Q1399.3197,582.3008 1399.6642,582.637 Q1400.0087,582.9731 1401.1044,583.3799 L1402.1586,583.7783 Q1403.6527,584.3262 1404.3583,585.231 Q1405.0639,586.1357 1405.0639,587.5137 Q1405.0639,589.3896 1403.9557,590.3152 Q1402.8476,591.2407 1400.6063,591.2407 Q1399.685,591.2407 1398.7594,591.0208 Q1397.8339,590.8008 1396.9706,590.3691 L1396.9706,587.8374 Q1397.9501,588.5347 1398.8673,588.875 Q1399.7846,589.2153 1400.6811,589.2153 Q1401.5858,589.2153 1402.0839,588.8044 Q1402.5819,588.3936 1402.5819,587.6548 Q1402.5819,587.0986 1402.2499,586.6794 Q1401.9179,586.2603 1401.287,586.0195 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1420.15" y="589.0352">BaseService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1363" x2="1513" y1="600.5" y2="600.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1370" y="608.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1382" y="615.1348">name string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1370" y="621.4551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="1382" y="628.0898">started uint32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1370" y="634.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1382" y="641.0449">stopped uint32</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1370" y="647.3652"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21" x="1382" y="654">quit</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1406" y="654">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1435" y="654"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1435" y="654">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1467" y="654">{}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1370" y="660.3203"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1382" y="666.9551">impl Service</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1385" y="679.9102"/><ellipse cx="1373" cy="689.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1382" y="692.8652">Logger log.Logger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1363" x2="1513" y1="699.1855" y2="699.1855"/><ellipse cx="1373" cy="710.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1382" y="713.8203">SetLogger(l log.Logger)</text><ellipse cx="1373" cy="723.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1382" y="726.7754">Start() error</text><ellipse cx="1373" cy="736.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1382" y="739.7305">OnStart() error</text><ellipse cx="1373" cy="749.0508" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="1382" y="752.6855">Stop() error</text><ellipse cx="1373" cy="762.0059" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="1382" y="765.6406">OnStop()</text><ellipse cx="1373" cy="774.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1382" y="778.5957">Reset() error</text><ellipse cx="1373" cy="787.916" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1382" y="791.5508">OnReset() error</text><ellipse cx="1373" cy="800.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1382" y="804.5059">IsRunning() bool</text><ellipse cx="1373" cy="813.8262" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="1382" y="817.4609">Wait()</text><ellipse cx="1373" cy="826.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1382" y="830.416">String() string</text><ellipse cx="1373" cy="839.7363" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="1382" y="843.3711">Quit()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1416" y="843.3711">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1445" y="843.3711"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1445" y="843.3711">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1477" y="843.3711">{}</text><!--MD5=[fd25aa4d66dcc726e577441cd7f3c4c1]
class service.Service--><rect fill="#FEFECE" filter="url(#f7xsjlce0an8t)" height="177.5508" id="service.Service" style="stroke: #A80036; stroke-width: 1.5;" width="149" x="1363.5" y="84.5"/><ellipse cx="1413.75" cy="100.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1410.1777,96.7651 L1410.1777,94.6069 L1417.5571,94.6069 L1417.5571,96.7651 L1415.0918,96.7651 L1415.0918,104.8418 L1417.5571,104.8418 L1417.5571,107 L1410.1777,107 L1410.1777,104.8418 L1412.6431,104.8418 L1412.6431,96.7651 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="40" x="1434.25" y="105.0352">Service</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1364.5" x2="1511.5" y1="116.5" y2="116.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1364.5" x2="1511.5" y1="124.5" y2="124.5"/><ellipse cx="1374.5" cy="135.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1383.5" y="139.1348">Start() error</text><ellipse cx="1374.5" cy="148.4551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="1383.5" y="152.0898">OnStart() error</text><ellipse cx="1374.5" cy="161.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="1383.5" y="165.0449">Stop() error</text><ellipse cx="1374.5" cy="174.3652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="1383.5" y="178">OnStop()</text><ellipse cx="1374.5" cy="187.3203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1383.5" y="190.9551">Reset() error</text><ellipse cx="1374.5" cy="200.2754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="1383.5" y="203.9102">OnReset() error</text><ellipse cx="1374.5" cy="213.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1383.5" y="216.8652">IsRunning() bool</text><ellipse cx="1374.5" cy="226.1855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="1383.5" y="229.8203">Quit()</text><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="1417.5" y="229.8203">chan</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1446.5" y="229.8203"/><text fill="#0000FF" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="1446.5" y="229.8203">struct</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="8" x="1478.5" y="229.8203">{}</text><ellipse cx="1374.5" cy="239.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1383.5" y="242.7754">String() string</text><ellipse cx="1374.5" cy="252.0957" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1383.5" y="255.7305">SetLogger( log.Logger)</text><!--MD5=[ac75108900a7da53673606bc12d5f375]
reverse link service.Service to service.BaseService--><path d="M1438,282.82 C1438,365.18 1438,479.14 1438,568.34 " fill="none" id="service.Service&lt;-service.BaseService" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1431,282.6,1438,262.6,1445,282.6,1431,282.6" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b3ca9392012dbc1ca56a23f1d34c5e32]
reverse link service.BaseService to p2p.BaseReactor--><path d="M1426.72,863.02 C1412.99,936.81 1383.7,1019.96 1322,1070 C1222.05,1151.06 870.29,1096.62 746,1130 C740.24,1131.55 734.42,1133.29 728.59,1135.18 " fill="none" id="service.BaseService&lt;-p2p.BaseReactor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1429.03,849.84,1424.0545,855.0596,1426.9589,861.6599,1431.9344,856.4403,1429.03,849.84" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[37fcf60b90146dd4e50b73ee638398fe]
link p2p.BaseReactor to p2p.Reactor--><path d="M728.67,1199.5 C733.53,1199.5 738.4,1199.5 743.26,1199.5 " fill="none" id="p2p.BaseReactor-&gt;p2p.Reactor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="743.27,1192.5,763.27,1199.5,743.27,1206.5,743.27,1192.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b9fbf2a7effaeaefa17c476384a1dba2]
reverse link p2p.peerConn to p2p.peer--><path d="M1026.61,261.84 C1049.57,327.33 1081.95,419.72 1111.3,503.45 " fill="none" id="p2p.peerConn&lt;-p2p.peer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1022.3,249.52,1020.5092,256.5052,1026.2683,260.8449,1028.0591,253.8597,1022.3,249.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a4829d3d32a44b3a8142c2ba0a35b7f2]
reverse link service.BaseService to p2p.peer--><path d="M1348.85,709 C1334.57,709 1320.29,709 1306.02,709 " fill="none" id="service.BaseService&lt;-p2p.peer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1361.96,709,1355.96,705,1349.96,709,1355.96,713,1361.96,709" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0c3700d192805ae30ab006e56b4633f3]
reverse link p2p.Transport to p2p.MultiplexTransport--><path d="M372.13,242.43 C344.93,311.21 301.61,420.75 263.81,516.31 " fill="none" id="p2p.Transport&lt;-p2p.MultiplexTransport" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="365.66,239.76,379.53,223.73,378.68,244.91,365.66,239.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5fcf14daa37ccae53c4b796a0afc96ba]
reverse link p2p.transportLifecycle to p2p.MultiplexTransport--><path d="M157.59,230.87 C161.9,298.4 169.33,415.11 175.78,516.19 " fill="none" id="p2p.transportLifecycle&lt;-p2p.MultiplexTransport" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="150.6,231.15,156.31,210.75,164.57,230.26,150.6,231.15" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[050d08726fdf1574cedda3f8be396e30]
reverse link p2p.IPeerSet to p2p.PeerSet--><path d="M832.23,249.85 C853.63,343.44 890.22,503.45 914.01,607.45 " fill="none" id="p2p.IPeerSet&lt;-p2p.PeerSet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="825.35,251.14,827.71,230.08,838.99,248.02,825.35,251.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[a88ba8938669b8d1f443f70d77216d8b]
reverse link p2p.Peer to p2p.peer--><path d="M1201.71,308.63 C1198.95,367.58 1195.65,438.12 1192.59,503.4 " fill="none" id="p2p.Peer&lt;-p2p.peer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1194.74,307.95,1202.67,288.29,1208.72,308.6,1194.74,307.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[13142556ca77b4ea3786758c1200ed69]
link p2p.Switch to service.BaseService--><path d="M811.93,347.78 C822.11,340.55 832.69,333.92 843.67,328 C889.31,303.39 1265.37,302.17 1310.33,328 C1388.87,373.11 1420.59,470.46 1432.77,555.47 " fill="none" id="p2p.Switch-&gt;service.BaseService" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1434.49,568.45,1437.6638,561.9749,1432.9075,556.5548,1429.7337,563.0299,1434.49,568.45" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6e480aef305aad66a6c56b9453c18417]
link p2p.Switch to p2p.BaseReactor--><path d="M581.62,1070.15 C582.13,1089.98 582.78,1108.48 583.57,1124.92 " fill="none" id="p2p.Switch-&gt;p2p.BaseReactor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="583.82,1129.96,587.3787,1120.7765,583.5774,1124.9659,579.3881,1121.1647,583.82,1129.96" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="529.8709" y="1090.2131">reactors</text><!--MD5=[b14611813044e641dc988996b3ed6edd]
reverse link p2p.Switch to p2p.BaseReactor--><path d="M604.9,1075.25 C604.33,1095.18 603.6,1113.68 602.72,1129.96 " fill="none" id="p2p.Switch&lt;-p2p.BaseReactor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="605.05,1070.15,600.7946,1079.0321,604.9072,1075.148,608.7913,1079.2606,605.05,1070.15" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="41" x="560.5409" y="1119.1363">Switch</text><!--MD5=[a924b6e98268a62b9e927706709f5ae4]
link p2p.Switch to p2p.PeerSet--><path d="M813.71,709 C823.69,709 833.67,709 843.65,709 " fill="none" id="p2p.Switch-&gt;p2p.PeerSet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="848.87,709,839.87,705,843.87,709,839.87,713,848.87,709" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="821.6929" y="705.5922">peers</text><!--MD5=[9fe161fb271e8b8d4eeb24ae21c077f8]
reverse link p2p.MultiplexTransport to p2p.Switch--><path d="M342.69,709 C352.6,709 362.52,709 372.43,709 " fill="none" id="p2p.MultiplexTransport&lt;-p2p.Switch" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="337.5,709,346.5,713,342.5,709,346.5,705,337.5,709" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="306.0263" y="703.6059">transport</text><!--MD5=[5dec3acfd8f3e3e3c796fe4f98622533]
link p2p.PeerSet to p2p.peer--><path d="M1025.41,709 C1035.19,709 1044.98,709 1054.76,709 " fill="none" id="p2p.PeerSet-&gt;p2p.peer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1059.88,709,1050.88,705,1054.88,709,1050.88,713,1059.88,709" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="20" x="1031.8503" y="705.9275">list</text><!--MD5=[47bee6841d9e6fc017ee662e71bacd11]
@startuml
namespace p2p {
    class BaseReactor << (S,Aquamarine) >> {
        + Switch *Switch

        + SetSwitch(sw *Switch) 
        + GetChannels() []*conn.ChannelDescriptor
        + AddPeer(peer Peer) 
        + RemovePeer(peer Peer, reason <font color=blue>interface</font>{}) 
        + Receive(chID byte, peer Peer, msgBytes []byte) 
        + InitPeer(peer Peer) Peer

    }
    interface IPeerSet  {
        + Has(key ID) bool
        + HasIP(ip net.IP) bool
        + Get(key ID) Peer
        + List() []Peer
        + Size() int

    }
    class MultiplexTransport << (S,Aquamarine) >> {
        - netAddr NetAddress
        - listener net.Listener
        - maxIncomingConnections int
        - acceptc <font color=blue>chan</font> accept
        - closec <font color=blue>chan</font> <font color=blue>struct</font>{}
        - conns ConnSet
        - connFilters []ConnFilterFunc
        - dialTimeout time.Duration
        - filterTimeout time.Duration
        - handshakeTimeout time.Duration
        - nodeInfo NodeInfo
        - nodeKey NodeKey
        - resolver IPResolver
        - mConfig conn.MConnConfig

        - acceptPeers() 
        - cleanup(c net.Conn) error
        - filterConn(c net.Conn) error
        - upgrade(c net.Conn, dialedAddr *NetAddress) (....)
        - wrapPeer(c net.Conn, ni NodeInfo, ....) Peer

        + NetAddress() NetAddress
        + Accept(cfg peerConfig) (Peer, error)
        + Dial(addr NetAddress, cfg peerConfig) (Peer, error)
        + Close() error
        + Listen(addr NetAddress) error
        + Cleanup(p Peer) 

    }
    interface Peer  {
        + FlushStop() 
        + ID() ID
        + RemoteIP() net.IP
        + RemoteAddr() net.Addr
        + IsOutbound() bool
        + IsPersistent() bool
        + CloseConn() error
        + NodeInfo() NodeInfo
        + Status() conn.ConnectionStatus
        + SocketAddr() *NetAddress
        + Send( byte,  []byte) bool
        + TrySend( byte,  []byte) bool
        + Set( string,  <font color=blue>interface</font>{}) 
        + Get( string) <font color=blue>interface</font>{}

    }
    class PeerSet << (S,Aquamarine) >> {
        - mtx sync.Mutex
        - lookup <font color=blue>map</font>[ID]*peerSetItem
        - list []Peer

        - hasIP(peerIP net.IP) bool

        + Add(peer Peer) error
        + Has(peerKey ID) bool
        + HasIP(peerIP net.IP) bool
        + Get(peerKey ID) Peer
        + Remove(peer Peer) bool
        + Size() int
        + List() []Peer

    }
    interface Reactor  {
        + SetSwitch( *Switch) 
        + GetChannels() []*conn.ChannelDescriptor
        + InitPeer(peer Peer) Peer
        + AddPeer(peer Peer) 
        + RemovePeer(peer Peer, reason <font color=blue>interface</font>{}) 
        + Receive(chID byte, peer Peer, msgBytes []byte) 

    }
    class Switch << (S,Aquamarine) >> {
        - config *config.P2PConfig
        - reactors <font color=blue>map</font>[string]Reactor
        - chDescs []*conn.ChannelDescriptor
        - reactorsByCh <font color=blue>map</font>[byte]Reactor
        - peers *PeerSet
        - dialing *cmap.CMap
        - reconnecting *cmap.CMap
        - nodeInfo NodeInfo
        - nodeKey *NodeKey
        - addrBook AddrBook
        - persistentPeersAddrs []*NetAddress
        - unconditionalPeerIDs <font color=blue>map</font>[ID]<font color=blue>struct</font>{}
        - transport Transport
        - filterTimeout time.Duration
        - peerFilters []PeerFilterFunc
        - rng *rand.Rand
        - metrics *Metrics

        - stopAndRemovePeer(peer Peer, reason <font color=blue>interface</font>{}) 
        - reconnectToPeer(addr *NetAddress) 
        - dialPeersAsync(netAddrs []*NetAddress) 
        - randomSleep(interval time.Duration) 
        - acceptRoutine() 
        - addOutboundPeerWithConfig(addr *NetAddress, cfg *config.P2PConfig) error
        - filterPeer(p Peer) error
        - addPeer(p Peer) error
        - addPeerWithConnection(conn net.Conn) error

        + NetAddress() *NetAddress
        + AddReactor(name string, reactor Reactor) Reactor
        + RemoveReactor(name string, reactor Reactor) 
        + Reactors() <font color=blue>map</font>[string]Reactor
        + Reactor(name string) Reactor
        + SetNodeInfo(nodeInfo NodeInfo) 
        + NodeInfo() NodeInfo
        + SetNodeKey(nodeKey *NodeKey) 
        + OnStart() error
        + OnStop() 
        + Broadcast(chID byte, msgBytes []byte) <font color=blue>chan</font> bool
        + NumPeers() int
        + IsPeerUnconditional(id ID) bool
        + MaxNumOutboundPeers() int
        + Peers() IPeerSet
        + StopPeerForError(peer Peer, reason <font color=blue>interface</font>{}) 
        + StopPeerGracefully(peer Peer) 
        + SetAddrBook(addrBook AddrBook) 
        + MarkPeerAsGood(peer Peer) 
        + DialPeersAsync(peers []string) error
        + DialPeerWithAddress(addr *NetAddress) error
        + IsDialingOrExistingAddress(addr *NetAddress) bool
        + AddPersistentPeers(addrs []string) error
        + AddUnconditionalPeerIDs(ids []string) error
        + IsPeerPersistent(na *NetAddress) bool

    }
    interface Transport  {
        + NetAddress() NetAddress
        + Accept( peerConfig) (Peer, error)
        + Dial( NetAddress,  peerConfig) (Peer, error)
        + Cleanup( Peer) 

    }
    class peer << (S,Aquamarine) >> {
        - mconn *conn.MConnection
        - nodeInfo NodeInfo
        - channels []byte
        - metrics *Metrics
        - metricsTicker *time.Ticker

        + Data *cmap.CMap

        - hasChannel(chID byte) bool
        - metricsReporter() 

        + String() string
        + SetLogger(l log.Logger) 
        + OnStart() error
        + FlushStop() 
        + OnStop() 
        + ID() ID
        + IsOutbound() bool
        + IsPersistent() bool
        + NodeInfo() NodeInfo
        + SocketAddr() *NetAddress
        + Status() conn.ConnectionStatus
        + Send(chID byte, msgBytes []byte) bool
        + TrySend(chID byte, msgBytes []byte) bool
        + Get(key string) <font color=blue>interface</font>{}
        + Set(key string, data <font color=blue>interface</font>{}) 
        + CloseConn() error
        + RemoteAddr() net.Addr
        + CanSend(chID byte) bool

    }
    class peerConn << (S,Aquamarine) >> {
        - outbound bool
        - persistent bool
        - conn net.Conn
        - socketAddr *NetAddress
        - ip net.IP

        + ID() ID
        + RemoteIP() net.IP
        + CloseConn() 

    }
    interface transportLifecycle  {
        + Close() error
        + Listen( NetAddress) error

    }
}

namespace service {
    class BaseService << (S,Aquamarine) >> {
        - name string
        - started uint32
        - stopped uint32
        - quit <font color=blue>chan</font> <font color=blue>struct</font>{}
        - impl Service

        + Logger log.Logger

        + SetLogger(l log.Logger) 
        + Start() error
        + OnStart() error
        + Stop() error
        + OnStop() 
        + Reset() error
        + OnReset() error
        + IsRunning() bool
        + Wait() 
        + String() string
        + Quit() <font color=blue>chan</font> <font color=blue>struct</font>{}

    }
    interface Service  {
        + Start() error
        + OnStart() error
        + Stop() error
        + OnStop() 
        + Reset() error
        + OnReset() error
        + IsRunning() bool
        + Quit() <font color=blue>chan</font> <font color=blue>struct</font>{}
        + String() string
        + SetLogger( log.Logger) 

    }
}

"service.Service" <|- - "service.BaseService"

"service.BaseService" *- - "p2p.BaseReactor"
"p2p.Reactor" <|-left "p2p.BaseReactor"

"p2p.peerConn" *- - "p2p.peer"
"service.BaseService" *- - "p2p.peer"


"p2p.Transport" <|- - "p2p.MultiplexTransport"
"p2p.transportLifecycle" <|- - "p2p.MultiplexTransport"
"p2p.IPeerSet" <|- - "p2p.PeerSet"

"p2p.Peer" <|- - "p2p.peer"

"service.BaseService" *-up- "p2p.Switch"
"p2p.BaseReactor" <-down- "reactors" "p2p.Switch"
"p2p.PeerSet" <-right "peers" "p2p.Switch"
"p2p.MultiplexTransport" <-left "transport" "p2p.Switch"
 "p2p.Switch" <- - "Switch" "p2p.BaseReactor"

"p2p.peer" <-right "list" "p2p.PeerSet"


@enduml

PlantUML version 1.2019.13(Wed Dec 11 01:18:29 CST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 13.0.1+9
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: CN
--></g></svg>